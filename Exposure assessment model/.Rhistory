if(group_name == "II")
{return(36.31)}
else if(group_name == "III")
{return(39.27)}
else if(group_name == "IV")
{return(38.735)}
else if(group_name == "V")
{return(37.375)}
else (group_name == "VII")
{return(42.35)}
}
rm(list=ls())
# import data set
data1 <- read.csv("InputFiles/simulation_input.csv")
colnames(data1) <- c("isolate","Q0","Nmax","b","Tmin","group")
data1$N0 <- 1e2
## Set up dataframe for modeling 100 units of HTST milk
n_sim = 100
data = data.frame(unit_id = rep(seq(1,n_sim)))
## Set seed
set.seed(1)
# Stage 1: facility storage
## (a)  Sample the temperature distribution
data$T_F <- rep(runif(n_sim,min=3.5,max=4.5)) #uniform distribution
## (b) Sample the storage time (in days) distribution
data$t_F <- rep(runif(n_sim,min=1,max=2)) #uniform distribution
# Stage 2: transport from facility to retail store
## (a)  Sample the temperature distribution
data$T_T <- rep(rtri(n_sim,min=1.7,max=10.0,mode=4.4)) #triangular distribution
## (b) Sample the transportation time (in days) distribution
data$t_T <- rep(rtri(n_sim,min=1,max=10,mode=5))
# Stage 3: storage/display at retail store
## (a)  Sample the temperature distribution
data$T_S <- rep(rtruncnorm(n_sim,a=-1.4,b=5.4,mean=2.3,sd=1.8)) #truncated normal distribution
## (b) Sample the storage time (in days) distribution
data$t_S <- rep(rtruncnorm(n_sim,a=0.042,b=10.0, mean=1.821,sd=3.3)) #truncated normal distribution
## Stage 4: transportation from retail store to home
## (a)  Sample the temperature distribution
data$T_T2 <- rep(rtruncnorm(n_sim,a=0,b=10,mean=8.5,sd=1.0)) #truncated normal distribution
## (b) Sample the transportation time (in days) distribution
data$t_T2 <- rep(rtruncnorm(n_sim,a=0.01,b=0.24, mean=0.04,sd=0.02)) #truncated normal distribution
## Stage 5: home storage
## (a)  Sample the temperature distribution
temps <- rep(NA, n_sim)
for (i in 1:n_sim){
number <- rlaplace(1,m=4.06,s=2.31)
while (number > 15 | number < -1) {
number <- rlaplace(1,m=4.06,s=2.31) #truncated laplace distribution
}
temps[i] <- number
}
data$T_H <- temps
## (b) Define t_H as 14, 35 days for all units
data$t_H <- rep(35, each = n_sim)
## Model temperature profiles of 100 units HTST milk
env_cond_time <- matrix(c(rep(0,100),
data$t_F,
data$t_F+0.001,
data$t_F + data$t_T,
data$t_F + data$t_T+0.001,
data$t_F + data$t_T + data$t_S,
data$t_F + data$t_T + data$t_S+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2,
data$t_F + data$t_T + data$t_S + data$t_T2+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2 + data$t_H), ncol = 10)
env_cond_temp <- matrix(c(data$T_F,
data$T_F,
data$T_T,
data$T_T,
data$T_S,
data$T_S,
data$T_T2,
data$T_T2,
data$T_H,
data$T_H), ncol = 10)
xopt_func <- function(group_name){
if(group_name == "II")
{return(36.31)}
else if(group_name == "III")
{return(39.27)}
else if(group_name == "IV")
{return(38.735)}
else if(group_name == "V")
{return(37.375)}
else (group_name == "VII")
{return(42.35)}
}
reduced_Ratkowski <- function(x, xmin, b, group_name) {
xopt <- xopt_func(group_name)
mu_opt <- b * (xopt - xmin)
gamma <- b * (x - xmin)
gamma <- gamma/mu_opt
gamma <- gamma^2
gamma[x < xmin] <- 0
return(gamma)
}
unique_isolates <- unique(data1$isolate)
my_primary <- list()
my_secondary <- list()
for (i in 1:length(unique_isolates)) {
isolate <- unique_isolates[i]
isolate_data <- subset(data1, isolate == isolate) # subset the data for the current isolate
sec_temperature <- list(model = "reducedRatkowsky",
xmin = isolate_data$Tmin,
b = isolate_data$b,
group_name = isolate_data$group
)
mu_opt = (b*(xopt_func(isolate_data$group)-xmin))^2
my_primary <- append(my_primary, list(mu_opt = mu_opt,
Nmax = isolate_data$Nmax,
N0 = isolate_data$N0,
Q0 = isolate_data$Q0))
my_secondary <- append(my_secondary, list(temperature = sec_temperature))
}
b
unique_isolates <- unique(data1$isolate)
unique_isolates
xmin
isolate_data
View(isolate_data)
unique_isolates <- unique(data1$isolate)
my_primary <- list()
my_secondary <- list()
for (i in 1:length(unique_isolates)) {
isolate <- unique_isolates[i]
isolate_data <- subset(data1, isolate == isolate) # subset the data for the current isolate
sec_temperature <- list(model = "reducedRatkowsky",
xmin = isolate_data$Tmin,
b = isolate_data$b,
group_name = isolate_data$group
)
mu_opt = (b*(xopt_func(isolate_data$group)-xmin))^2
my_primary <- append(my_primary, list(mu_opt = mu_opt,
Nmax = isolate_data$Nmax,
N0 = isolate_data$N0,
Q0 = isolate_data$Q0))
my_secondary <- append(my_secondary, list(temperature = sec_temperature))
}
print(isolate_data)
# import data set
data1 <- read.csv("InputFiles/simulation_input.csv")
colnames(data1) <- c("isolate","Q0","Nmax","b","Tmin","group")
data1$N0 <- 1e2
trace(biogrowth:::secondary_model_data, edit = T)
trace(biogrowth:::calculate_gammas, edit = T)
## Set up dataframe for modeling 100 units of HTST milk
n_sim = 100
data = data.frame(unit_id = rep(seq(1,n_sim)))
## Set seed
set.seed(1)
# Stage 1: facility storage
## (a)  Sample the temperature distribution
data$T_F <- rep(runif(n_sim,min=3.5,max=4.5)) #uniform distribution
## (b) Sample the storage time (in days) distribution
data$t_F <- rep(runif(n_sim,min=1,max=2)) #uniform distribution
# Stage 2: transport from facility to retail store
## (a)  Sample the temperature distribution
data$T_T <- rep(rtri(n_sim,min=1.7,max=10.0,mode=4.4)) #triangular distribution
## (b) Sample the transportation time (in days) distribution
data$t_T <- rep(rtri(n_sim,min=1,max=10,mode=5))
# Stage 3: storage/display at retail store
## (a)  Sample the temperature distribution
data$T_S <- rep(rtruncnorm(n_sim,a=-1.4,b=5.4,mean=2.3,sd=1.8)) #truncated normal distribution
## (b) Sample the storage time (in days) distribution
data$t_S <- rep(rtruncnorm(n_sim,a=0.042,b=10.0, mean=1.821,sd=3.3)) #truncated normal distribution
## Stage 4: transportation from retail store to home
## (a)  Sample the temperature distribution
data$T_T2 <- rep(rtruncnorm(n_sim,a=0,b=10,mean=8.5,sd=1.0)) #truncated normal distribution
## (b) Sample the transportation time (in days) distribution
data$t_T2 <- rep(rtruncnorm(n_sim,a=0.01,b=0.24, mean=0.04,sd=0.02)) #truncated normal distribution
## Stage 5: home storage
## (a)  Sample the temperature distribution
temps <- rep(NA, n_sim)
for (i in 1:n_sim){
number <- rlaplace(1,m=4.06,s=2.31)
while (number > 15 | number < -1) {
number <- rlaplace(1,m=4.06,s=2.31) #truncated laplace distribution
}
temps[i] <- number
}
data$T_H <- temps
## (b) Define t_H as 14, 35 days for all units
data$t_H <- rep(35, each = n_sim)
## Model temperature profiles of 100 units HTST milk
env_cond_time <- matrix(c(rep(0,100),
data$t_F,
data$t_F+0.001,
data$t_F + data$t_T,
data$t_F + data$t_T+0.001,
data$t_F + data$t_T + data$t_S,
data$t_F + data$t_T + data$t_S+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2,
data$t_F + data$t_T + data$t_S + data$t_T2+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2 + data$t_H), ncol = 10)
env_cond_temp <- matrix(c(data$T_F,
data$T_F,
data$T_T,
data$T_T,
data$T_S,
data$T_S,
data$T_T2,
data$T_T2,
data$T_H,
data$T_H), ncol = 10)
xopt_func <- function(group_name){
if(group_name == "II")
{return(36.31)}
else if(group_name == "III")
{return(39.27)}
else if(group_name == "IV")
{return(38.735)}
else if(group_name == "V")
{return(37.375)}
else (group_name == "VII")
{return(42.35)}
}
reduced_Ratkowski <- function(x, xmin, b, group_name) {
xopt <- xopt_func(group_name)
mu_opt <- b * (xopt - xmin)
gamma <- b * (x - xmin)
gamma <- gamma/mu_opt
gamma <- gamma^2
gamma[x < xmin] <- 0
return(gamma)
}
unique_isolates <- unique(data1$isolate)
my_primary <- list()
my_secondary <- list()
for (i in 1:length(unique_isolates)) {
isolate <- unique_isolates[i]
isolate_data <- subset(data1, isolate == isolate) # subset the data for the current isolate
sec_temperature <- list(model = "reducedRatkowsky",
xmin = isolate_data$Tmin,
b = isolate_data$b,
group_name = isolate_data$group
)
mu_opt = (b*(xopt_func(isolate_data$group)-xmin))^2
my_primary <- append(my_primary, list(mu_opt = mu_opt,
Nmax = isolate_data$Nmax,
N0 = isolate_data$N0,
Q0 = isolate_data$Q0))
my_secondary <- append(my_secondary, list(temperature = sec_temperature))
}
isolate_data
isolate_data$Tmin
isolate_data$b
isolate_data$group
unique_isolates <- unique(data1$isolate)
my_primary <- list()
my_secondary <- list()
for (i in 1:length(unique_isolates)) {
isolate <- unique_isolates[i]
isolate_data <- subset(data1, isolate == isolate) # subset the data for the current isolate
sec_temperature <- list(model = "reducedRatkowsky",
xmin = isolate_data$Tmin,
b = isolate_data$b,
group_name = isolate_data$group
)
mu_opt = (b*(xopt_func(isolate_data$group)-xmin))^2
my_primary <- append(my_primary, list(mu_opt = mu_opt,
Nmax = isolate_data$Nmax,
N0 = isolate_data$N0,
Q0 = isolate_data$Q0))
my_secondary <- append(my_secondary, list(temperature = sec_temperature))
}
mu_opt
b
my_secondary
isolate_data$group
b
unique_isolates <- unique(data1$isolate)
my_primary <- list()
my_secondary <- list()
for (i in 1:length(unique_isolates)) {
isolate <- unique_isolates[i]
isolate_data <- subset(data1, isolate == isolate) # subset the data for the current isolate
sec_temperature <- list(model = "reducedRatkowsky",
xmin = isolate_data$Tmin,
b = isolate_data$b,
group_name = isolate_data$group
)
mu_opt = (isolate_data$b*(xopt_func(isolate_data$group)-isolate_data$xmin))^2
my_primary <- list(mu_opt = mu_opt,
Nmax = isolate_data$Nmax,
N0 = isolate_data$N0,
Q0 = isolate_data$Q0)
my_secondary <- list(temperature = sec_temperature)
}
sec_temperature
View(sec_temperature)
unique_isolates <- unique(data1$isolate)
my_primary <- list()
my_secondary <- list()
for (i in 1:length(unique_isolates)) {
isolate <- unique_isolates[i]
isolate_data <- subset(data1, isolate == isolate) # subset the data for the current isolate
sec_temperature <- list(model = "reducedRatkowsky",
xmin[i] = isolate_data$Tmin,
xopt_func("II")
data1
# import data set
data1 <- read.csv("InputFiles/simulation_input.csv")
colnames(data1) <- c("isolate","Q0","Nmax","b","Tmin","group")
data1$N0 <- 1e2
rm(list=ls())
library(biogrowth)
?lambda_to_Q0
rm(list=ls())
rm(list=ls())
rm(list=ls())
trace(biogrowth:::predict_dynamic_growth,edit = T)
rm(liost=ls())
rm(list=ls())
?epi.prcc
??epi.prcc
rm(list = ls())
setwd("C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model/Exposure assessment model")
read.csv("OutputFiles\Result.csv")
read.csv("OutputFiles/Result.csv")
model <- lm(percent_over_5_d35 ~ Q0 + Nmax + b + Tmin + mu_opt, data = data)
class(data)
data = as.data.frame(data())
class(data)
data = read.csv("OutputFiles/Result.csv")
class(data)
model <- lm(percent_over_5_d35 ~ Q0 + Nmax + b + Tmin + mu_opt, data = data)
summary(model)
plot(model)
model <- lm(percent_over_5_d35 ~ Q0 + log(Nmax) + b + Tmin + mu_opt, data = data)
summary(model)
plot(model)
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model")
# load packages
library(tibble)
library(EnvStats)         # to load rtri function
library(truncnorm)        # to load rtruncnorm function
library(jmuOutlier)       # to load rlaplace function
library(dplyr)
library(formula.tools)    # to load 'rhs'
library(purrr)            # to load 'map'
library(deSolve)          # to load 'ode'
library(rlang)
# load utility functions
source("Exposure assessment model/UtilityFunctions_dynamic_growth.R")
## Set up dataframe for modeling 100 units of HTST milk
n_sim = 100
data = data.frame(unit_id = rep(seq(1,n_sim)))
## Set seed
set.seed(1)
# Stage 1: facility storage
## (a)  Sample the temperature distribution
data$T_F <- rep(runif(n_sim,min=3.5,max=4.5)) #uniform distribution
## (b) Sample the storage time (in days) distribution
data$t_F <- rep(runif(n_sim,min=1,max=2)) #uniform distribution
# Stage 2: transport from facility to retail store
## (a)  Sample the temperature distribution
data$T_T <- rep(rtri(n_sim,min=1.7,max=10.0,mode=4.4)) #triangular distribution
## (b) Sample the transportation time (in days) distribution
data$t_T <- rep(rtri(n_sim,min=1,max=10,mode=5))
# Stage 3: storage/display at retail store
## (a)  Sample the temperature distribution
data$T_S <- rep(rtruncnorm(n_sim,a=-1.4,b=5.4,mean=2.3,sd=1.8)) #truncated normal distribution
## (b) Sample the storage time (in days) distribution
data$t_S <- rep(rtruncnorm(n_sim,a=0.042,b=10.0, mean=1.821,sd=3.3)) #truncated normal distribution
## Stage 4: transportation from retail store to home
## (a)  Sample the temperature distribution
data$T_T2 <- rep(rtruncnorm(n_sim,a=0,b=10,mean=8.5,sd=1.0)) #truncated normal distribution
## (b) Sample the transportation time (in days) distribution
data$t_T2 <- rep(rtruncnorm(n_sim,a=0.01,b=0.24, mean=0.04,sd=0.02)) #truncated normal distribution
## Stage 5: home storage
## (a)  Sample the temperature distribution
temps <- rep(NA, n_sim)
for (i in 1:n_sim){
number <- rlaplace(1,m=4.06,s=2.31)
while (number > 15 | number < -1) {
number <- rlaplace(1,m=4.06,s=2.31) #truncated laplace distribution
}
temps[i] <- number
}
data$T_H <- temps
## (b) Define t_H as 14, 35 days for all units
data$t_H <- rep(35, each = n_sim)
## Model temperature profiles of 100 units HTST milk
env_cond_time <- matrix(c(rep(0,100),
data$t_F,
data$t_F+0.001,
data$t_F + data$t_T,
data$t_F + data$t_T+0.001,
data$t_F + data$t_T + data$t_S,
data$t_F + data$t_T + data$t_S+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2,
data$t_F + data$t_T + data$t_S + data$t_T2+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2 + data$t_H), ncol = 10)
env_cond_temp <- matrix(c(data$T_F,
data$T_F,
data$T_T,
data$T_T,
data$T_S,
data$T_S,
data$T_T2,
data$T_T2,
data$T_H,
data$T_H), ncol = 10)
# Import data set
data_Q0 = read.csv("Exposure assessment model/InputFiles/Q0_h0_summary.csv")
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model")
# load packages
library(tibble)
library(EnvStats)         # to load rtri function
library(truncnorm)        # to load rtruncnorm function
library(jmuOutlier)       # to load rlaplace function
library(dplyr)
library(formula.tools)    # to load 'rhs'
library(purrr)            # to load 'map'
library(deSolve)          # to load 'ode'
library(rlang)
# load utility functions
source("Exposure assessment model/UtilityFunctions_dynamic_growth.R")
## Set up dataframe for modeling 100 units of HTST milk
n_sim = 100
data = data.frame(unit_id = rep(seq(1,n_sim)))
## Set seed
set.seed(1)
# Stage 1: facility storage
## (a)  Sample the temperature distribution
data$T_F <- rep(runif(n_sim,min=3.5,max=4.5)) #uniform distribution
## (b) Sample the storage time (in days) distribution
data$t_F <- rep(runif(n_sim,min=1,max=2)) #uniform distribution
# Stage 2: transport from facility to retail store
## (a)  Sample the temperature distribution
data$T_T <- rep(rtri(n_sim,min=1.7,max=10.0,mode=4.4)) #triangular distribution
## (b) Sample the transportation time (in days) distribution
data$t_T <- rep(rtri(n_sim,min=1,max=10,mode=5))
# Stage 3: storage/display at retail store
## (a)  Sample the temperature distribution
data$T_S <- rep(rtruncnorm(n_sim,a=-1.4,b=5.4,mean=2.3,sd=1.8)) #truncated normal distribution
## (b) Sample the storage time (in days) distribution
data$t_S <- rep(rtruncnorm(n_sim,a=0.042,b=10.0, mean=1.821,sd=3.3)) #truncated normal distribution
## Stage 4: transportation from retail store to home
## (a)  Sample the temperature distribution
data$T_T2 <- rep(rtruncnorm(n_sim,a=0,b=10,mean=8.5,sd=1.0)) #truncated normal distribution
## (b) Sample the transportation time (in days) distribution
data$t_T2 <- rep(rtruncnorm(n_sim,a=0.01,b=0.24, mean=0.04,sd=0.02)) #truncated normal distribution
## Stage 5: home storage
## (a)  Sample the temperature distribution
temps <- rep(NA, n_sim)
for (i in 1:n_sim){
number <- rlaplace(1,m=4.06,s=2.31)
while (number > 15 | number < -1) {
number <- rlaplace(1,m=4.06,s=2.31) #truncated laplace distribution
}
temps[i] <- number
}
data$T_H <- temps
## (b) Define t_H as 14, 35 days for all units
data$t_H <- rep(35, each = n_sim)
## Model temperature profiles of 100 units HTST milk
env_cond_time <- matrix(c(rep(0,100),
data$t_F,
data$t_F+0.001,
data$t_F + data$t_T,
data$t_F + data$t_T+0.001,
data$t_F + data$t_T + data$t_S,
data$t_F + data$t_T + data$t_S+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2,
data$t_F + data$t_T + data$t_S + data$t_T2+0.001,
data$t_F + data$t_T + data$t_S + data$t_T2 + data$t_H), ncol = 10)
env_cond_temp <- matrix(c(data$T_F,
data$T_F,
data$T_T,
data$T_T,
data$T_S,
data$T_S,
data$T_T2,
data$T_T2,
data$T_H,
data$T_H), ncol = 10)
# Import data set
data_Q0 = read.csv("Exposure assessment model/InputFiles/Q0_h0_summary.csv")
data_Nmax = read.csv("Exposure assessment model/InputFiles/Nmax_new.csv")
data_sec_model = read.csv("Exposure assessment model/InputFiles/sec_model_new.csv")
Clade = c("II","VII","IV","IV","IV","IV","II","III","IV","II","VII","II","V","V","IV")
# Generate simulation input
simulation_input <- data.frame(isolate = data_Q0$isolate[3:17], Q0 = data_Q0$Q0[3:17], Nmax = data_Nmax$average_Nmax[3:17],
b = data_sec_model$b[3:17], Tmin = data_sec_model$Tmin[3:17],Clade)
simulation_input$Topt = sapply(simulation_input$Clade, xopt_func)
simulation_input$mu_opt = (simulation_input$b*(simulation_input$Topt-simulation_input$Tmin))^2
# Run simulation
final_conc_d35 <- simulation_input %>%
rowwise() %>%
mutate(final_conc_isolate = list(lapply(1:n_sim, function(j) {
my_primary <- list(mu_opt = mu_opt, Nmax = Nmax, N0 = 1e2, Q0 = Q0)
sec_temperature <- list(model = "reducedRatkowsky", xmin = Tmin, b = b, clade = Clade)
my_secondary <- list(temperature = sec_temperature)
growth <- predict_dynamic_growth(times = env_cond_time[j,],
env_conditions = tibble(time = env_cond_time[j,],
temperature = env_cond_temp[j,]),
my_primary,
my_secondary)
sim <- growth$simulation
return(tail(sim$logN, 1))
}))) %>%
pull(final_conc_isolate)
# Convert the list of 15 elements into a matrix
matrix <- t(sapply(final_conc_d35, function(x) sapply(x, tail, n=1)))
# Calculate the percentage over 5 for each row (element) in the matrix
percent_over_5_d35 <- rowMeans(matrix > 5) * 100
simulation_input$percent_over_5_d35 = percent_over_5_d35
# Output
Result = simulation_input
write.csv(Result,"Exposure assessment model/OutputFiles/Result.csv")
library(shiny); runApp('C:/Users/sujun/OneDrive/Documents/RWork/PPC gram negative bacteria in fluid milk/App/App_PPC_revised.R')
