x = "Isolate",
y = "Percent milk containers > 5 log increase/decrease from baseline (Q0_avg)") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
data_long <- tidyr::pivot_longer(data, cols = c("Q0_min", "Q0_max"), names_to = "range_type", values_to = "value")
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = "Tornado Diagram for Sensitivity Analysis of Q0",
x = "Isolate",
y = "Percent point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Minimum Q0" = "blue", "Maximum Q0" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = "Tornado Diagram for Sensitivity Analysis of Q0",
x = "Isolate",
y = "Percent point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = NULL)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
scale_x_continuous(limits = c(-10, 10))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
scale_x_continuous(limits = c(-10, 10))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.6, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 0.1, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 0.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 1, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 1.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(data = subset(data_long, range_type == "Q0_min"),
aes(label = isolate),
hjust = 1.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp = read.csv("GP.csv")
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
?create_boxplot
??create_boxplot
install.packages("gridExtra")
install.packages("gridExtra")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp = read.csv("GP.csv")
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Your existing code for data filtering and arranging
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- boxplot(data_22$mumax ~ data_22$Temp, col = c("lightblue", "blue"), main = "Temp == 22", xlab = "Temperature", ylab = "mumax")
plot_22_lag <- boxplot(data_22$lag ~ data_22$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 22", xlab = "Temperature", ylab = "lag")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- boxplot(data_10$mumax ~ data_10$Temp, col = c("lightblue", "blue"), main = "Temp == 10", xlab = "Temperature", ylab = "mumax")
plot_10_lag <- boxplot(data_10$lag ~ data_10$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 10", xlab = "Temperature", ylab = "lag")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- boxplot(data_16$mumax ~ data_16$Temp, col = c("lightblue", "blue"), main = "Temp == 16", xlab = "Temperature", ylab = "mumax")
plot_16_lag <- boxplot(data_16$lag ~ data_16$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 16", xlab = "Temperature", ylab = "lag")
# Arrange the plots in a grid
par(mfrow = c(2, 3))  # 2 rows, 3 columns
boxplot(data_22$mumax ~ data_22$Temp, col = c("lightblue", "blue"), main = "Temp == 22", xlab = "Temperature", ylab = "mumax")
boxplot(data_22$lag ~ data_22$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 22", xlab = "Temperature", ylab = "lag")
boxplot(data_10$mumax ~ data_10$Temp, col = c("lightblue", "blue"), main = "Temp == 10", xlab = "Temperature", ylab = "mumax")
boxplot(data_10$lag ~ data_10$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 10", xlab = "Temperature", ylab = "lag")
boxplot(data_16$mumax ~ data_16$Temp, col = c("lightblue", "blue"), main = "Temp == 16", xlab = "Temperature", ylab = "mumax")
boxplot(data_16$lag ~ data_16$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 16", xlab = "Temperature", ylab = "lag")
# Your existing code for data filtering and arranging
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Function to create boxplot
create_boxplot <- function(data, temp, variable, color1, color2) {
temp_variable <- interaction(data$Temp, data[[variable]])
boxplot(data[[variable]] ~ temp_variable, col = c(color1, color2), main = paste("Temp =", temp, "-", variable), xlab = "Temperature", ylab = variable)
}
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
# Arrange the plots in a grid
grid.arrange(
arrangeGrob(plot_22_lag, plot_10_lag, plot_16_lag, ncol = 3),
arrangeGrob(plot_22_mumax, plot_10_mumax, plot_16_mumax, ncol = 3),
ncol = 1
)
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- boxplot(data_22, "22", "mumax", "lightblue", "blue")
library(ggplot2)
library(gridExtra)
library(tidyverse)
Result = read.csv("Result.csv")
Scenario_data = read.csv("scenario_analysis.csv")
Sensitivity_data = read.csv("sensitivity_analysis.csv")
colnames(Sensitivity_data) [1] = "isolate"
gp = read.csv("GP.csv")
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_3, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 3 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
Sensitivity_data$Q0 <- factor(Sensitivity_data$Q0, levels = c("Q0_min", "Q0_avg", "Q0_max"))
ggplot(Sensitivity_data, aes(x = as.factor(isolate), y = percent_over_5, fill = Q0)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#009E73", "#E69F00", "#56B4E9"),
labels = c("Q0_min", "Q0_avg", "Q0_max"),
name = "Q0")
ggplot(Scenario_data, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(scenario))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("red", "#009E73", "#E69F00", "#56B4E9", "brown"),
labels = c("base model", "scenario i", "scenario ii", "scenario iii", "scenario iv")) +
theme(legend.title = element_blank())
ggplot(count_by_isolate, aes(x = days, y = count, color = as.factor(isolate))) +
geom_line() +
geom_point() +
labs(x = "Storage Days", y = "B cereus Count (log10 CFU/mL)") +
scale_x_continuous(breaks = c(0, 14, 21, 35, 60, 90)) +
scale_color_discrete(name = "Isolate") +
theme_minimal()
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
# Arrange the plots in a grid
grid.arrange(
arrangeGrob(plot_22_lag, plot_10_lag, plot_16_lag, ncol = 3),
arrangeGrob(plot_22_mumax, plot_10_mumax, plot_16_mumax, ncol = 3),
ncol = 1
)
rm(list=ls())
library(ggplot2)
library(gridExtra)
library(tidyverse)
Result = read.csv("Result.csv")
Scenario_data = read.csv("scenario_analysis.csv")
Sensitivity_data = read.csv("sensitivity_analysis.csv")
colnames(Sensitivity_data) [1] = "isolate"
gp = read.csv("GP.csv")
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_3, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 3 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
Sensitivity_data$Q0 <- factor(Sensitivity_data$Q0, levels = c("Q0_min", "Q0_avg", "Q0_max"))
ggplot(Sensitivity_data, aes(x = as.factor(isolate), y = percent_over_5, fill = Q0)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#009E73", "#E69F00", "#56B4E9"),
labels = c("Q0_min", "Q0_avg", "Q0_max"),
name = "Q0")
ggplot(Scenario_data, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(scenario))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("red", "#009E73", "#E69F00", "#56B4E9", "brown"),
labels = c("base model", "scenario i", "scenario ii", "scenario iii", "scenario iv")) +
theme(legend.title = element_blank())
ggplot(count_by_isolate, aes(x = days, y = count, color = as.factor(isolate))) +
geom_line() +
geom_point() +
labs(x = "Storage Days", y = "B cereus Count (log10 CFU/mL)") +
scale_x_continuous(breaks = c(0, 14, 21, 35, 60, 90)) +
scale_color_discrete(name = "Isolate") +
theme_minimal()
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
# Arrange the plots in a grid
grid.arrange(
arrangeGrob(plot_22_lag, plot_10_lag, plot_16_lag, ncol = 3),
arrangeGrob(plot_22_mumax, plot_10_mumax, plot_16_mumax, ncol = 3),
ncol = 1
)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp = read.csv("GP.csv")
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
library(ggplot2)
data <- read.csv("Tornado.csv")
colnames(data)[1] = "isolate"
data_long <- tidyr::pivot_longer(data, cols = c("Q0_min", "Q0_max"), names_to = "range_type", values_to = "value")
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(data = subset(data_long, range_type == "Q0_min"),
aes(label = isolate),
hjust = 1.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model")
# load packages
library(tibble)
library(dplyr)
library(tidyr)
library(formula.tools)    # to load 'rhs'
library(purrr)            # to load 'map'
library(deSolve)          # to load 'ode'
library(rlang)
# load utility functions
source("Exposure assessment model/UtilityFunctions_dynamic_growth.R")
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model")
# load packages
library(tibble)
library(dplyr)
library(tidyr)
library(formula.tools)    # to load 'rhs'
library(purrr)            # to load 'map'
library(deSolve)          # to load 'ode'
library(rlang)
# load utility functions
source("Exposure assessment model/UtilityFunctions_dynamic_growth.R")
data_Q0 = read.csv("Exposure assessment model/InputFiles/Q0_h0_summary.csv")
data_Nmax = read.csv("Exposure assessment model/InputFiles/Nmax_new.csv")
data_sec_model = read.csv("Exposure assessment model/InputFiles/sec_model_new.csv")
Clade = c("I","II","VII","IV","IV","IV","IV","II","III","IV","II","VII","II","V","V","IV")
simulation_input <- data.frame(isolate = data_Q0$isolate,
Q0 = data_Q0$Q0,
Nmax = data_Nmax$average_Nmax,
b = data_sec_model$Slope,
Tmin = data_sec_model$Tmin,
Clade)
simulation_input$Topt = sapply(simulation_input$Clade, xopt_func)
simulation_input$mu_opt = (simulation_input$b*(simulation_input$Topt-simulation_input$Tmin))^2
# create a tibble with environmental conditions over time (3dC)
env_cond_time <- c(0:90)
env_cond_temp <- 3
# group the data by isolate name
simulation_input_groups <- simulation_input %>%
group_by(isolate)
# run simulation (3dC)
count_d90_by_isolate <- simulation_input_groups %>%
nest() %>%
mutate(
count_d90 = map(data, ~{
my_primary <- list(mu_opt = .$mu_opt, Nmax = .$Nmax, N0 = 1e2, Q0 = .$Q0)
sec_temperature <- list(model = "reducedRatkowsky", xmin = .$Tmin, b = .$b, clade = .$Clade)
my_secondary <- list(temperature = sec_temperature)
growth <- predict_dynamic_growth(
times = env_cond_time,
env_conditions = tibble(time = env_cond_time, temperature = rep(env_cond_temp, 91)),
my_primary,
my_secondary
)
sim <- growth$simulation
tail(sim$logN, 1)
})
) %>%
select(isolate, count_d90)
count_d90_by_isolate <- as.data.frame(count_d90_by_isolate)
simulation_Tmin_result = do.call(rbind,count_d90_by_isolate)
write.csv(simulation_Tmin_result,"Exposure assessment model/OutputFiles/sanity_check_result.csv")
setwd("C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model/Exposure assessment model/plot")
library(ggplot2)
library(tidyverse)
Result = read.csv("Result.csv")
orange <- rgb(255, 165, 0, maxColorValue = 255)
green <- rgb(100, 255, 150, maxColorValue = 255)
blue <- rgb(100, 200, 255, maxColorValue = 255)
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Group), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c(orange, blue, green),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15) +
ggtitle("A") +
theme_minimal()
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_3, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Group), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 3 log (%)") +
scale_fill_manual(values = c(orange, blue, green),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15) +
ggtitle("B") +
theme_minimal()
