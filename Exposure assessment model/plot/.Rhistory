library(ggplot2)
data <- read.csv("Tornado.csv")
colnames(data)[1] = "isolate"
data_long <- tidyr::pivot_longer(data, cols = c("Q0_min", "Q0_max"), names_to = "range_type", values_to = "value")
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = "Tornado Diagram for Sensitivity Analysis of Q0",
x = "Isolate",
y = "Percent milk containers > 5 log increase/decrease from baseline (Q0_avg)") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
data_long <- tidyr::pivot_longer(data, cols = c("Q0_min", "Q0_max"), names_to = "range_type", values_to = "value")
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = "Tornado Diagram for Sensitivity Analysis of Q0",
x = "Isolate",
y = "Percent point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Minimum Q0" = "blue", "Maximum Q0" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = "Tornado Diagram for Sensitivity Analysis of Q0",
x = "Isolate",
y = "Percent point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = NULL)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
scale_x_continuous(limits = c(-10, 10))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
scale_x_continuous(limits = c(-10, 10))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank())
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.6, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = -0.2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 0.1, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 0.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 1, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 2, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(aes(label = isolate), hjust = 1.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(data = subset(data_long, range_type == "Q0_min"),
aes(label = isolate),
hjust = 1.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp = read.csv("GP.csv")
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
?create_boxplot
??create_boxplot
install.packages("gridExtra")
install.packages("gridExtra")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp = read.csv("GP.csv")
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Your existing code for data filtering and arranging
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- boxplot(data_22$mumax ~ data_22$Temp, col = c("lightblue", "blue"), main = "Temp == 22", xlab = "Temperature", ylab = "mumax")
plot_22_lag <- boxplot(data_22$lag ~ data_22$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 22", xlab = "Temperature", ylab = "lag")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- boxplot(data_10$mumax ~ data_10$Temp, col = c("lightblue", "blue"), main = "Temp == 10", xlab = "Temperature", ylab = "mumax")
plot_10_lag <- boxplot(data_10$lag ~ data_10$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 10", xlab = "Temperature", ylab = "lag")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- boxplot(data_16$mumax ~ data_16$Temp, col = c("lightblue", "blue"), main = "Temp == 16", xlab = "Temperature", ylab = "mumax")
plot_16_lag <- boxplot(data_16$lag ~ data_16$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 16", xlab = "Temperature", ylab = "lag")
# Arrange the plots in a grid
par(mfrow = c(2, 3))  # 2 rows, 3 columns
boxplot(data_22$mumax ~ data_22$Temp, col = c("lightblue", "blue"), main = "Temp == 22", xlab = "Temperature", ylab = "mumax")
boxplot(data_22$lag ~ data_22$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 22", xlab = "Temperature", ylab = "lag")
boxplot(data_10$mumax ~ data_10$Temp, col = c("lightblue", "blue"), main = "Temp == 10", xlab = "Temperature", ylab = "mumax")
boxplot(data_10$lag ~ data_10$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 10", xlab = "Temperature", ylab = "lag")
boxplot(data_16$mumax ~ data_16$Temp, col = c("lightblue", "blue"), main = "Temp == 16", xlab = "Temperature", ylab = "mumax")
boxplot(data_16$lag ~ data_16$Temp, col = c("lightgreen", "darkgreen"), main = "Temp == 16", xlab = "Temperature", ylab = "lag")
# Your existing code for data filtering and arranging
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Function to create boxplot
create_boxplot <- function(data, temp, variable, color1, color2) {
temp_variable <- interaction(data$Temp, data[[variable]])
boxplot(data[[variable]] ~ temp_variable, col = c(color1, color2), main = paste("Temp =", temp, "-", variable), xlab = "Temperature", ylab = variable)
}
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
# Arrange the plots in a grid
grid.arrange(
arrangeGrob(plot_22_lag, plot_10_lag, plot_16_lag, ncol = 3),
arrangeGrob(plot_22_mumax, plot_10_mumax, plot_16_mumax, ncol = 3),
ncol = 1
)
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- boxplot(data_22, "22", "mumax", "lightblue", "blue")
library(ggplot2)
library(gridExtra)
library(tidyverse)
Result = read.csv("Result.csv")
Scenario_data = read.csv("scenario_analysis.csv")
Sensitivity_data = read.csv("sensitivity_analysis.csv")
colnames(Sensitivity_data) [1] = "isolate"
gp = read.csv("GP.csv")
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_3, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 3 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
Sensitivity_data$Q0 <- factor(Sensitivity_data$Q0, levels = c("Q0_min", "Q0_avg", "Q0_max"))
ggplot(Sensitivity_data, aes(x = as.factor(isolate), y = percent_over_5, fill = Q0)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#009E73", "#E69F00", "#56B4E9"),
labels = c("Q0_min", "Q0_avg", "Q0_max"),
name = "Q0")
ggplot(Scenario_data, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(scenario))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("red", "#009E73", "#E69F00", "#56B4E9", "brown"),
labels = c("base model", "scenario i", "scenario ii", "scenario iii", "scenario iv")) +
theme(legend.title = element_blank())
ggplot(count_by_isolate, aes(x = days, y = count, color = as.factor(isolate))) +
geom_line() +
geom_point() +
labs(x = "Storage Days", y = "B cereus Count (log10 CFU/mL)") +
scale_x_continuous(breaks = c(0, 14, 21, 35, 60, 90)) +
scale_color_discrete(name = "Isolate") +
theme_minimal()
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
# Arrange the plots in a grid
grid.arrange(
arrangeGrob(plot_22_lag, plot_10_lag, plot_16_lag, ncol = 3),
arrangeGrob(plot_22_mumax, plot_10_mumax, plot_16_mumax, ncol = 3),
ncol = 1
)
rm(list=ls())
library(ggplot2)
library(gridExtra)
library(tidyverse)
Result = read.csv("Result.csv")
Scenario_data = read.csv("scenario_analysis.csv")
Sensitivity_data = read.csv("sensitivity_analysis.csv")
colnames(Sensitivity_data) [1] = "isolate"
gp = read.csv("GP.csv")
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_3, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 3 log (%)") +
scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73"),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15)
Sensitivity_data$Q0 <- factor(Sensitivity_data$Q0, levels = c("Q0_min", "Q0_avg", "Q0_max"))
ggplot(Sensitivity_data, aes(x = as.factor(isolate), y = percent_over_5, fill = Q0)) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("#009E73", "#E69F00", "#56B4E9"),
labels = c("Q0_min", "Q0_avg", "Q0_max"),
name = "Q0")
ggplot(Scenario_data, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(scenario))) +
geom_bar(stat = "identity", position = "dodge") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c("red", "#009E73", "#E69F00", "#56B4E9", "brown"),
labels = c("base model", "scenario i", "scenario ii", "scenario iii", "scenario iv")) +
theme(legend.title = element_blank())
ggplot(count_by_isolate, aes(x = days, y = count, color = as.factor(isolate))) +
geom_line() +
geom_point() +
labs(x = "Storage Days", y = "B cereus Count (log10 CFU/mL)") +
scale_x_continuous(breaks = c(0, 14, 21, 35, 60, 90)) +
scale_color_discrete(name = "Isolate") +
theme_minimal()
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
# Arrange the plots in a grid
grid.arrange(
arrangeGrob(plot_22_lag, plot_10_lag, plot_16_lag, ncol = 3),
arrangeGrob(plot_22_mumax, plot_10_mumax, plot_16_mumax, ncol = 3),
ncol = 1
)
install.packages("ggplot2")
install.packages("ggplot2")
library(ggplot2)
library(gridExtra)
library(tidyverse)
gp = read.csv("GP.csv")
gp_filtered <- gp[gp$Group != "III", ]
title_font_size <- 12
# Create boxplots for Temp == 22
data_22 <- subset(gp_filtered, Temp == "22")
plot_22_mumax <- create_boxplot(data_22, "22", "mumax", "lightblue", "blue")
plot_22_lag <- create_boxplot(data_22, "22", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 10
data_10 <- subset(gp_filtered, Temp == "10")
plot_10_mumax <- create_boxplot(data_10, "10", "mumax", "lightblue", "blue")
plot_10_lag <- create_boxplot(data_10, "10", "lag", "lightgreen", "darkgreen")
# Create boxplots for Temp == 16
data_16 <- subset(gp_filtered, Temp == "16")
plot_16_mumax <- create_boxplot(data_16, "16", "mumax", "lightblue", "blue")
plot_16_lag <- create_boxplot(data_16, "16", "lag", "lightgreen", "darkgreen")
library(ggplot2)
data <- read.csv("Tornado.csv")
colnames(data)[1] = "isolate"
data_long <- tidyr::pivot_longer(data, cols = c("Q0_min", "Q0_max"), names_to = "range_type", values_to = "value")
ggplot(data_long, aes(x = factor(isolate, levels = unique(data$isolate)), y = value, fill = range_type)) +
geom_bar(stat = "identity", position = "identity", color = "black") +
geom_text(data = subset(data_long, range_type == "Q0_min"),
aes(label = isolate),
hjust = 1.5, vjust = 0.5, color = "black", size = 3) +
coord_flip() +
labs(title = NULL,
x = "Isolate",
y = "Percentage point increases and decreasse from the base model prediction results") +
scale_fill_manual(values = c("Q0_min" = "blue", "Q0_max" = "red")) +
theme_minimal() +
theme(axis.text.y = element_blank()) +
guides(fill = guide_legend(title = NULL))
setwd("C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model/Exposure assessment model/plot")
setwd("C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model/Exposure assessment model/plot")
library(dplyr)
library(dunn.test)
dat <- read.csv("GP.csv")
dat <- dat[dat$Group != "III", ]
dat_10 <- subset(dat, Temp == "10")
dat_22 <- subset(dat, Temp == "22")
result_10 <- dat_10 %>%
group_by(Group) %>%
summarise(
lag_min = min(lag),
lag_q25 = quantile(lag, 0.25),
lag_median = median(lag),
lag_q75 = quantile(lag, 0.75),
lag_max = max(lag),
mumax_min = min(mumax),
mumax_q25 = quantile(mumax, 0.25),
mumax_median = median(mumax),
mumax_q75 = quantile(mumax, 0.75),
mumax_max = max(mumax)
)
result_22 <- dat_22 %>%
group_by(Group) %>%
summarise(
lag_min = min(lag),
lag_q25 = quantile(lag, 0.25),
lag_median = median(lag),
lag_q75 = quantile(lag, 0.75),
lag_max = max(lag),
mumax_min = min(mumax),
mumax_q25 = quantile(mumax, 0.25),
mumax_median = median(mumax),
mumax_q75 = quantile(mumax, 0.75),
mumax_max = max(mumax)
)
kruskal.test(lag ~ Group, data = dat_10)
kruskal.test(mumax ~ Group, data = dat_10)
kruskal.test(lag ~ Group, data = dat_22)
dunn.test(dat_22$lag, dat_22$Group, method = "bonferroni")
kruskal.test(mumax ~ Group, data = dat_22)
dunn.test(dat_22$mumax, dat_22$Group, method = "bonferroni")
setwd("C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model/Exposure assessment model/plot")
library(ggplot2)
library(tidyverse)
Result = read.csv("Result.csv")
# Figure 2. Base model prediction results
orange <- rgb(255, 165, 0, maxColorValue = 255)
green <- rgb(100, 255, 150, maxColorValue = 255)
blue <- rgb(100, 200, 255, maxColorValue = 255)
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Clade), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c(orange, blue, green),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15) +
ggtitle("A") +
theme_minimal()
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_5, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Group), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 5 log (%)") +
scale_fill_manual(values = c(orange, blue, green),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15) +
ggtitle("A") +
theme_minimal()
ggplot(Result, aes(x = as.factor(isolate), y = percent_over_3, fill = factor(day))) +
geom_bar(stat = "identity", position = "dodge") +
facet_wrap(vars(Group), scales = "free") +
labs(x = "Isolate name", y = "Percent milk containers > 3 log (%)") +
scale_fill_manual(values = c(orange, blue, green),
labels = c("Day 14", "Day 21", "Day 35"),
name = "Consumer Storage Day") +
ylim(0,15) +
ggtitle("B") +
theme_minimal()
