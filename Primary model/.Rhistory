starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Iso),]
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample
sub_data <- data_list[i]
# extract the sample information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax),
data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
data_sporeformer
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Iso"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Iso),]
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample
sub_data <- data_list[i]
# extract the sample information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax),
data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
starting_values_sporeformer
data_sporeformer
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample
sub_data <- data_list[i]
# extract the sample information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax),
data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
sub_data
rm(list=ls())
setwd("C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
# Load packages
library(nlsMicrobio)
library(minpack.lm)
# Import data
# Sporeformers
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = na.omit(data1)
colnames(data1)[1] = "t"
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = na.omit(data2)
colnames(data2)[1] = "t"
# Load primary growth models
source("UtilityFunctions_baranyi.R")
# Subset data
A50030 <- subset(data2, Isolate == "A5-0030" & CountType =="Total")
A50030$LOG10N <- as.numeric(A50030$LOG10N)
plot(A50030$t,A50030$LOG10N)
mod <- lm(A50030$LOG10N[6:13] ~ A50030$t[6:13])
slope <- coef(mod) [2]
slope*2.303
# Fit Baranyi
A50030.bar_LM <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax), data=A50030,
start=list (
LOG10N0 = 3,
lag = 5,
mumax = 0.8081,
LOG10Nmax = 7.5),
lower = c(0,0,0,0))
rm(list=ls())
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
# load packages
library(nlsMicrobio)
library(minpack.lm)
# load primary growth models
source("UtilityFunctions_baranyi.R")
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Iso"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Iso),]
data_sporeformer
starting_values_sporeformer
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
# load packages
library(nlsMicrobio)
library(minpack.lm)
# load primary growth models
source("UtilityFunctions_baranyi.R")
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Iso"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Iso),]
starting_values_sporeformer
data_sporeformer
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample
sub_data <- data_list[i]
# extract the sample information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax),
data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
isolate <- unique(sub_data$Isolate)
isolate
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
rm(list=ls())
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
# load packages
library(nlsMicrobio)
library(minpack.lm)
# load primary growth models
source("UtilityFunctions_baranyi.R")
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Iso"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Iso),]
data_list
sub_data <- data_list[1]
sub_data
isolate <- unique(sub_data$Isolate)
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax),
data=sub_data,
start = list(),
lower = c(0,0,0,0))
rm(list=ls())
# Load packages
library(nlsMicrobio)
library(minpack.lm)
# Import data
# Sporeformers
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = na.omit(data1)
colnames(data1)[1] = "t"
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = na.omit(data2)
colnames(data2)[1] = "t"
# Load primary growth models
source("UtilityFunctions_baranyi.R")
# Subset data
A50030 <- subset(data2, Isolate == "A5-0030" & CountType =="Total")
A50030$LOG10N <- as.numeric(A50030$LOG10N)
plot(A50030$t,A50030$LOG10N)
mod <- lm(A50030$LOG10N[6:13] ~ A50030$t[6:13])
slope <- coef(mod) [2]
slope*2.303
A50030.bar_LM <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax), data=A50030,
start=list (),
lower = c(0,0,0,0))
rm(list=ls())
setwd("C:/Users/sujun/Documents/GitHub/Bacillus-cereus-exposure-assessment-model/Primary model")
# load packages
library(nlsMicrobio)
library(minpack.lm)
# load primary growth models
source("UtilityFunctions_baranyi.R")
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Iso"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Iso),]
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample
sub_data <- data_list[i]
# extract the sample information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax),
data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
rm(list=ls())
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
# load packages
library(nlsMicrobio)
library(minpack.lm)
# load primary growth models
source("UtilityFunctions_baranyi.R")
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Iso"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Iso),]
View(data_sporeformer)
View(data_sporeformer)
View(starting_values_sporeformer)
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
# load packages
library(nlsMicrobio)
library(minpack.lm)
# load primary growth models
source("UtilityFunctions_baranyi.R")
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Isolate"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Isolate),]
View(starting_values_sporeformer)
View(data_sporeformer)
data_list
data_list[[1]]
data_list[1]
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample and rep
sub_data <- data_list[[i]]
# extract the sample and rep information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_22dC$LOG10N0[i],
lag = starting_values_22dC$lag[i],
mumax = starting_values_22dC$mumax[i],
LOG10Nmax = starting_values_22dC$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax), data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate, rep=rep,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample and rep
sub_data <- data_list[[i]]
# extract the sample and rep information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax), data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate, rep=rep,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
sub_data = data_list[[1]]
sub_data
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[1],
lag = starting_values_sporeformer$lag[1],
mumax = starting_values_sporeformer$mumax[1],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[1])
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax), data=sub_data,
start = start_values,
lower = c(0,0,0,0))
coef_values <- coefficients(fit)
coef_values
fit_list[[1]]
knitr::opts_knit$set(root.dir = "C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Refit Primary Growth Model")
# load packages
library(nlsMicrobio)
library(minpack.lm)
# load primary growth models
source("UtilityFunctions_baranyi.R")
# sporeformer growth data
data1 = read.csv("SporeformerRawGrowth.csv")
data1 = subset(data1, CountType == "Total")
data2 = read.csv("SporeformerRawGrowthTrial2.csv")
data2 = subset(data2, CountType == "Total")
data_sporeformer = rbind(data1, data2)
colnames(data_sporeformer)[1] <- "t"
data_sporeformer$LOG10N <- as.numeric(data_sporeformer$LOG10N)
data_sporeformer <- data_sporeformer[order(data_sporeformer$Isolate),]
data_sporeformer <- na.omit(data_sporeformer)
# create a list of data frames, one for each isolate
data_list <- split(data_sporeformer, list(data_sporeformer$Isolate))
# sporeformer starting values
starting_values_sporeformer <-read.csv("Starting_value_sporeformers.csv")
colnames(starting_values_sporeformer)[1] <- "Isolate"
starting_values_sporeformer<-starting_values_sporeformer[order(starting_values_sporeformer$Isolate),]
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample and rep
sub_data <- data_list[[i]]
# extract the sample and rep information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax), data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[i] <- data.frame(isolate=isolate, rep=rep,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
isolate
LOG10N0
# initialize a list to store the fits
fit_list <- list()
# loop over each sample and its repetitions
for (i in 1:length(data_list)) {
# subset the data for the current sample and rep
sub_data <- data_list[[i]]
# extract the sample and rep information
isolate <- unique(sub_data$Isolate)
# set the starting values for the current isolate and rep
start_values <- c(LOG10N0 = starting_values_sporeformer$LOG10N0[i],
lag = starting_values_sporeformer$lag[i],
mumax = starting_values_sporeformer$mumax[i],
LOG10Nmax = starting_values_sporeformer$LOG10Nmax[i])
# fit the Baranyi model to the subset of data
fit <- nlsLM(LOG10N ~ baranyi_log10N(t,lag,mumax,LOG10N0,LOG10Nmax), data=sub_data,
start = start_values,
lower = c(0,0,0,0))
# extract the model coefficients
coef_values <- coefficients(fit)
# add the fit and its summary to the fit list
fit_list[[i]] <- data.frame(isolate=isolate,
LOG10N0 = coef_values["LOG10N0"],
lag = coef_values["lag"],
mumax = coef_values["mumax"],
LOG10Nmax = coef_values["LOG10Nmax"])
}
fits_sporefomers <- do.call(rbind, fit_list)
fits_sporefomers
